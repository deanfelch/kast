<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Kast - View Conversation</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css" />
<link rel="stylesheet" href="/css/frontend.css" />
</head>
<body class="bg-dark text-light">
  <div class="container py-5">
    <div class="conversation-header">
      <h2 class="mb-0">Conversation: <%= conversationId %></h2><br>
      <h2><a href="/record?conversationId=<%= conversationId %>" class="btn btn-primary">
        ‚ûï New Kast
      </a></h2>
    </div>
    <div class="recording-list">
    <% if (kasts.length === 0) { %>
      <div class="alert alert-secondary text-center">
        No recordings yet. Click ‚ÄúNew Recording‚Äù to add one.
      </div>
    <% } else { %>
        <% kasts.forEach(kast => { %>
            <div class="kast-item border rounded p-3 mb-4 bg-secondary bg-opacity-10">
                <!-- Row 1: Date -->
                <div class="kast-date mb-2 text-light-emphasis small" data-datetime="<%= kast.uploaded_at %>">
                    <!-- Filled by JS -->
                </div>

                <!-- Row 2: Title + Edit + Username -->
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    <!-- Left: title and pencil/save -->
                    <div class="d-flex align-items-center flex-grow-1">
                        <div class="d-flex align-items-center kast-title-wrapper">
                        <span
                            class="kast-title me-2"
                            data-id="<%= kast.id %>"
                            contenteditable="false"
                            title="Click pencil to edit title"
                        >
                            <%= kast.title || "Untitled Kast" %>
                        </span>
                        <button class="edit-icon btn btn-sm btn-outline-light border-0" data-id="<%= kast.id %>">‚úèÔ∏è</button>
                        <span class="save-confirmation text-success fw-bold ms-2" style="opacity: 0;">‚úÖ</span>
                        </div>
                    </div>

                    <!-- Right: username -->
                    <div class="kast-username small text-end ms-3">
                        by <%= kast.username || "Unknown" %>
                    </div>
                </div>

                <!-- Row 3: Audio -->
                <div class="kast-audio mt-2">
                    <audio controls src="https://gateway.pinata.cloud/ipfs/<%= kast.cid %>" style="width: 100%"></audio>
                </div>
            </div>

        <% }) %>
    <% } %>
    </div>
  </div>

  <script>
  document.querySelectorAll(".edit-icon").forEach(button => {
    button.addEventListener("click", () => toggleEdit(button));
  });

  function toggleEdit(button) {
    const id = button.dataset.id;
    const container = button.closest(".kast-item");
    const titleEl = container.querySelector(".kast-title");
    const confirmation = container.querySelector(".save-confirmation");

    const isEditing = titleEl.isContentEditable;

    if (!isEditing) {
      // Start editing
      titleEl.contentEditable = "true";
      titleEl.classList.add("editing");
      titleEl.focus();
      placeCursorAtEnd(titleEl);
      button.textContent = "üíæ";

      // Save on Enter key
      titleEl.addEventListener("keydown", function onEnter(e) {
        if (e.key === "Enter") {
          e.preventDefault();
          titleEl.removeEventListener("keydown", onEnter);
          saveTitle(id, titleEl, button, confirmation);
        }
      });

      // Save on blur
      titleEl.addEventListener("blur", function onBlur() {
        titleEl.removeEventListener("blur", onBlur);
        saveTitle(id, titleEl, button, confirmation);
      });

    } else {
      // Manual save via button
      saveTitle(id, titleEl, button, confirmation);
    }
  }

  function saveTitle(id, titleEl, button, confirmation) {
    const newTitle = titleEl.innerText.trim();

    // Disable editing
    titleEl.contentEditable = "false";
    titleEl.classList.remove("editing");
    button.textContent = "‚úèÔ∏è";

    fetch(`/kasts/${id}/title`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ title: newTitle })
    })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          confirmation.classList.add("show");
          setTimeout(() => confirmation.classList.remove("show"), 1200);
        } else {
          alert("‚ö†Ô∏è Failed to update title.");
        }
      })
      .catch(err => {
        console.error("Save error:", err);
        alert("‚ùå Could not save title.");
      });
  }

  function placeCursorAtEnd(el) {
    const range = document.createRange();
    const sel = window.getSelection();
    range.selectNodeContents(el);
    range.collapse(false);
    sel.removeAllRanges();
    sel.addRange(range);
  }

  document.querySelectorAll(".kast-date").forEach(el => {
    const raw = el.dataset.datetime;
    const date = new Date(raw);
    const now = new Date();

    const isSameDay = (d1, d2) =>
      d1.getFullYear() === d2.getFullYear() &&
      d1.getMonth() === d2.getMonth() &&
      d1.getDate() === d2.getDate();

    const isYesterday = (d1, d2) => {
      const yesterday = new Date(d2);
      yesterday.setDate(yesterday.getDate() - 1);
      return isSameDay(d1, yesterday);
    };

    let label;
    if (isSameDay(date, now)) {
      label = "Today";
    } else if (isYesterday(date, now)) {
      label = "Yesterday";
    } else {
      label = date.toLocaleDateString(undefined, {
        year: "numeric",
        month: "short",
        day: "numeric"
      });
    }

    const time = date.toLocaleTimeString(undefined, {
      hour: "numeric",
      minute: "2-digit",
      hour12: true
    });

    el.textContent = `${label} ‚Äì ${time}`;
  });
</script>


</body>
</html>