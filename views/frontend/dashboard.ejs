<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Kast - Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css" />
<link rel="stylesheet" href="/css/frontend.css" />
</head>
<body class="bg-dark text-light">
  <div class="login-box text-center">
    <h1>Kast Dashboard</h1>
    <h2>Your Conversations</h2>
    <ul>
    <% conversations.forEach(convo => { %>
        <div class="conversation-item border-bottom py-3">
            <!-- Row 1: Editable title -->
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <div class="d-flex align-items-center flex-grow-1">
                <div class="conversation-title-wrapper d-flex align-items-center">
                    <span class="conversation-title-wrapper me-2">
                        <a
                            href="/conversations/<%= convo.id %>"
                            class="conversation-title text-decoration-none text-light"
                            data-id="<%= convo.id %>"
                            contenteditable="false"
                            title="Click pencil to edit title"
                        >
                            <%= convo.title || "Untitled Conversation" %>
                        </a>
                    </span>
                    <button class="edit-icon btn btn-sm btn-outline-light border-0" data-id="<%= convo.id %>">‚úèÔ∏è</button>
                    <span class="save-confirmation text-success fw-bold ms-2" style="opacity: 0;">‚úÖ</span>
                </div>
                </div>
                <div class="conversation-meta text-muted small text-end ms-3">
                Owner: <%= convo.owner_username %>
                </div>
            </div>

            <!-- Row 2: Stats -->
            <div class="d-flex justify-content-between text-light-emphasis small mt-2 flex-wrap">
                <div><%= convo.kast_count %> kasts</div>
                <div data-datetime="<%= convo.last_kast %>" class="conversation-date">
                <!-- formatted by JS -->
                </div>
            </div>
            </div>
    <% }) %>
    </ul>
  </div>

  <script>
  // Format conversation dates
  document.querySelectorAll(".conversation-date").forEach(el => {
    const raw = el.dataset.datetime;
    if (!raw) return;
    const date = new Date(raw);
    const now = new Date();

    const isSameDay = (d1, d2) =>
      d1.getFullYear() === d2.getFullYear() &&
      d1.getMonth() === d2.getMonth() &&
      d1.getDate() === d2.getDate();

    const isYesterday = (d1, d2) => {
      const yest = new Date(d2);
      yest.setDate(yest.getDate() - 1);
      return isSameDay(d1, yest);
    };

    let label;
    if (isSameDay(date, now)) label = "Today";
    else if (isYesterday(date, now)) label = "Yesterday";
    else label = date.toLocaleDateString(undefined, { month: "short", day: "numeric", year: "numeric" });

    const time = date.toLocaleTimeString(undefined, {
      hour: "numeric",
      minute: "2-digit",
      hour12: true
    });

    el.textContent = `${label} ‚Äì ${time}`;
  });

  // Editable conversation titles
  document.querySelectorAll(".edit-icon").forEach(btn => {
    btn.addEventListener("click", () => {
      const id = btn.dataset.id;
      const wrapper = btn.closest(".conversation-title-wrapper");
      const existing = wrapper.querySelector(".conversation-title");

      // If it's an <a>, replace it with a <span>
      if (existing.tagName === "A") {
        const span = document.createElement("span");
        span.className = existing.className;
        span.textContent = existing.textContent;
        span.dataset.id = id;
        span.contentEditable = true;
        span.classList.add("editing");
        wrapper.replaceChild(span, existing);
        span.focus();
        btn.textContent = "üíæ";
      } else {
        // It's a <span>, save the content
        const newTitle = existing.textContent.trim();
        fetch(`/conversations/${id}/title`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ title: newTitle })
        })
          .then(res => res.ok && res.json())
          .then(() => {
            const a = document.createElement("a");
            a.href = `/conversations/${id}`;
            a.className = existing.className.replace("editing", "");
            a.textContent = newTitle || "Untitled Conversation";
            a.dataset.id = id;
            wrapper.replaceChild(a, existing);
            btn.textContent = "‚úèÔ∏è";

            const check = wrapper.querySelector(".save-confirmation");
            if (check) {
              check.classList.add("show");
              setTimeout(() => check.classList.remove("show"), 1500);
            }
          })
          .catch(err => {
            console.error("Error saving title:", err);
          });
      }
    });
  });

  // Save on blur or Enter key
  document.addEventListener("keydown", e => {
    if (e.key === "Enter" && e.target.classList.contains("conversation-title")) {
      e.preventDefault();
      e.target.blur();
    }
  });

  document.addEventListener("blur", e => {
    if (e.target.classList.contains("conversation-title") && e.target.tagName === "SPAN") {
      const span = e.target;
      const wrapper = span.closest(".conversation-title-wrapper");
      const btn = wrapper.querySelector(".edit-icon");
      btn.click(); // triggers save
    }
  }, true);
</script>

</body>
</html>