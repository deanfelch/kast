<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Kast Live Recorder</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css" />
<link rel="stylesheet" href="/css/frontend.css" />
</head>
<body class="bg-dark text-light">
  <div class="login-box text-center">
    <h1>🎙️ Kast Live</h1>
    <p id="status">Ready to record</p>
    <button class="btn btn-success" id="startBtn">Start Recording</button>
    <button class="btn btn-danger" id="stopBtn" disabled>Stop Recording</button>
  </div>

  <script>
  let mediaRecorder;
  let ws;

  document.getElementById("startBtn").onclick = async () => {
    const status = document.getElementById("status");
    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
    mediaRecorder = new MediaRecorder(stream);
    ws = new WebSocket(`wss://${window.location.host}/ws-record`);

    ws.onopen = () => {
      status.textContent = "Recording and streaming...";
      mediaRecorder.start(1000); // 1s chunks
    };

    mediaRecorder.ondataavailable = e => {
      if (e.data.size > 0 && ws.readyState === WebSocket.OPEN) {
        ws.send(e.data);
      }
    };

    ws.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.status === "complete" && data.cid) {
        status.innerHTML = `
          ✅ Uploaded to IPFS:<br>
          <a href="${data.url}" target="_blank">${data.cid}</a>
        `;
        ws.close(); // ✅ Now it's safe to close the WebSocket
      }
    };
    
    // ✅ Listen for messages from the backend after recording is processed
    ws.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.status === "complete") {
        status.innerHTML = `
          ✅ Uploaded to IPFS:<br>
          <a href="${data.url}" target="_blank">${data.cid}</a>
        `;
      } else if (data.status === "error") {
        status.textContent = `❌ Upload failed: ${data.message}`;
      }
    };

    document.getElementById("startBtn").disabled = true;
    document.getElementById("stopBtn").disabled = false;
  };

  document.getElementById("stopBtn").onclick = () => {
    mediaRecorder.stop();
    document.getElementById("stopBtn").disabled = true;
  };
</script>
</body>
</html>
